// -------------------------------------
//   Helpers
// -------------------------------------
// ----- Placeholders, Extends, Mixins, and Functions
// -------------------------------------

// -------------------------------------
//   Placeholders
// -------------------------------------

// Image Replacement
%ir {
  background-color: transparent;
  border: 0;
  overflow: hidden;
  /* IE 6/7 fallback */
  *text-indent: -9999px;
}

%ir:before {
  content: "";
  display: block;
  width: 0;
  height: 150%;
}

// Clearfix
%clearfix:before,
%clearfix:after {
  // The space content is one way to avoid an Opera bug when the contenteditable attribute is included anywhere else in the document. Otherwise it causes space to appear at the top and bottom of elements that receive the `clearfix` class.
  content: " ";
  // The use of `table` rather than `block` is only necessary if using :before to contain the top-margins of child elements.
  display: table;
}

%clearfix:after {
  clear: both;
}

%clearfix {
  // For IE 6/7 only - Include this rule to trigger hasLayout and contain floats
  *zoom: 1;
}

// -------------------------------------
//   Functions
// -------------------------------------


// -------------------------------------
//   Mixins
// -------------------------------------

@mixin mq($point) {
  @if $point == desktop {
    @media (min-width: 1280px) { @content; }
  }
  @if $point == laptop {
    @media (min-width: 960px) { @content; }
  }
  @else if $point == tablet {
    @media (min-width: 768px) { @content; }
  }
  @else if $point == android {
    @media (min-width: 480px)  { @content; }
  }
  @else if $point == iphone {
    @media (min-width: 320px)  { @content; }
  }
}

@mixin coverer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@mixin centerer {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin word-wrap() {
  word-break:     break-word;
  -webkit-hyphens: auto;
  -moz-hyphens:    auto;
  hyphens:         auto;
}

@mixin ellipsis() {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

@function black($opacity) {
  @return rgba(black, $opacity)
}
@function white($opacity) {
  @return rgba(white, $opacity)
}

// MEDIA QUERY MIXIN

@mixin mq($point) {
  @if $point == desktop {
    @media (min-width: 1280px) { @content; }
  }
  @if $point == laptop {
    @media (min-width: 960px) { @content; }
  }
  @else if $point == tablet {
    @media (min-width: 768px) { @content; }
  }
  @else if $point == android {
    @media (min-width: 480px)  { @content; }
  }
  @else if $point == iphone {
    @media (min-width: 320px)  { @content; }
  }
}

// -------------------------------------
//   Utilities
// -------------------------------------